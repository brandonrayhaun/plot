Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $LinePlot = Elm.LinePlot.make(_elm),
   $List = Elm.List.make(_elm),
   $Plot = Elm.Plot.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Types = Elm.Types.make(_elm);
   var ax = function (pl) {
      return $Plot.xLimits({ctor: "_Tuple2"
                           ,_0: -2.8
                           ,_1: 2.8})($Plot.yLimits({ctor: "_Tuple2"
                                                    ,_0: -6
                                                    ,_1: 6})($Plot.yTick(_L.fromArray([5
                                                                                      ,-5]))($Plot.xTick(_L.fromArray([-2
                                                                                                                      ,-1
                                                                                                                      ,0
                                                                                                                      ,1
                                                                                                                      ,2]))($Plot.title("Hello")($LinePlot.addPlots(pl)($Plot.axes))))));
   };
   var timeElapsed = A2($Signal.foldp,
   F2(function (x,y) {
      return x + y;
   }),
   0)($Time.fps(30));
   var xpoints = A3($Plot.linspace,
   -3,
   3,
   100);
   var ypoints = A2($List.map,
   function (x) {
      return (3 * Math.pow(x,
      5) - 20 * Math.pow(x,3)) / 32;
   },
   xpoints);
   var example1 = function (ys) {
      return $LinePlot.markerSize(5)($LinePlot.lineWidth(6)($LinePlot.lineColor($Color.green)(A2($LinePlot.plot,
      xpoints,
      ys))));
   };
   var example2 = $LinePlot.lineWidth(6)($LinePlot.lineColor($Color.blue)(A2($LinePlot.plot,
   xpoints,
   ypoints)));
   var main = A2($Signal.map,
   function (t) {
      return $Plot.showA({ctor: "_Tuple2"
                         ,_0: 900
                         ,_1: 1000})(ax(_L.fromArray([example1(A2($List.map,
                                                     F2(function (x,y) {
                                                        return x * y;
                                                     })(t / 1000),
                                                     ypoints))
                                                     ,example2])));
   },
   timeElapsed);
   _elm.Main.values = {_op: _op
                      ,xpoints: xpoints
                      ,ypoints: ypoints
                      ,example1: example1
                      ,example2: example2
                      ,timeElapsed: timeElapsed
                      ,ax: ax
                      ,main: main};
   return _elm.Main.values;
};