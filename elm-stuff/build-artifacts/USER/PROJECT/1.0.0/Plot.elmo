Elm.Plot = Elm.Plot || {};
Elm.Plot.make = function (_elm) {
   "use strict";
   _elm.Plot = _elm.Plot || {};
   if (_elm.Plot.values)
   return _elm.Plot.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Plot",
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $FormatNumber = Elm.FormatNumber.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $LinePlot = Elm.LinePlot.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Text = Elm.Text.make(_elm),
   $Types = Elm.Types.make(_elm);
   var plots = F2(function (ps,
   ax) {
      return _U.replace([["plots"
                         ,ps]],
      ax);
   });
   var autoYLims = function (ax) {
      return function () {
         var getVal = F2(function (f,
         p) {
            return function () {
               switch (p.ctor)
               {case "LP": return f(p._0.y);}
               _U.badCase($moduleName,
               "between lines 84 and 86");
            }();
         });
         return {ctor: "_Tuple2"
                ,_0: $List.minimum(A2($List.map,
                getVal($List.minimum),
                ax.plots))
                ,_1: $List.maximum(A2($List.map,
                getVal($List.maximum),
                ax.plots))};
      }();
   };
   var autoXLims = function (ax) {
      return function () {
         var getVal = F2(function (f,
         p) {
            return function () {
               switch (p.ctor)
               {case "LP": return f(p._0.x);}
               _U.badCase($moduleName,
               "between lines 78 and 80");
            }();
         });
         return {ctor: "_Tuple2"
                ,_0: $List.minimum(A2($List.map,
                getVal($List.minimum),
                ax.plots))
                ,_1: $List.maximum(A2($List.map,
                getVal($List.maximum),
                ax.plots))};
      }();
   };
   var showA = F2(function (_v4,
   ax) {
      return function () {
         switch (_v4.ctor)
         {case "_Tuple2":
            return function () {
                 var sy_ = 3.8 / 5 * _v4._1;
                 var sx_ = 3.8 / 5 * _v4._0;
                 var xaxis = $Graphics$Collage.traced($Graphics$Collage.defaultLine)(A2($Graphics$Collage.segment,
                 {ctor: "_Tuple2"
                 ,_0: (0 - sx_) / 2
                 ,_1: (0 - sy_) / 2},
                 {ctor: "_Tuple2"
                 ,_0: sx_ / 2
                 ,_1: (0 - sy_) / 2}));
                 var yaxis = $Graphics$Collage.traced($Graphics$Collage.defaultLine)(A2($Graphics$Collage.segment,
                 {ctor: "_Tuple2"
                 ,_0: (0 - sx_) / 2
                 ,_1: (0 - sy_) / 2},
                 {ctor: "_Tuple2"
                 ,_0: (0 - sx_) / 2
                 ,_1: sy_ / 2}));
                 var $ = function () {
                    var _v8 = ax.yLimits;
                    switch (_v8.ctor)
                    {case "Auto":
                       return autoYLims(ax);
                       case "Explicit":
                       switch (_v8._0.ctor)
                         {case "_Tuple2":
                            return {ctor: "_Tuple2"
                                   ,_0: _v8._0._0
                                   ,_1: _v8._0._1};}
                         break;}
                    _U.badCase($moduleName,
                    "between lines 109 and 112");
                 }(),
                 ymin = $._0,
                 ymax = $._1;
                 var $ = function () {
                    var _v12 = ax.xLimits;
                    switch (_v12.ctor)
                    {case "Auto":
                       return autoXLims(ax);
                       case "Explicit":
                       switch (_v12._0.ctor)
                         {case "_Tuple2":
                            return {ctor: "_Tuple2"
                                   ,_0: _v12._0._0
                                   ,_1: _v12._0._1};}
                         break;}
                    _U.badCase($moduleName,
                    "between lines 106 and 109");
                 }(),
                 xmin = $._0,
                 xmax = $._1;
                 var plot2Forms = F4(function (_v16,
                 _v17,
                 _v18,
                 p) {
                    return function () {
                       switch (_v18.ctor)
                       {case "_Tuple2":
                          return function () {
                               switch (_v17.ctor)
                               {case "_Tuple2":
                                  return function () {
                                       switch (_v16.ctor)
                                       {case "_Tuple2":
                                          return function () {
                                               switch (p.ctor)
                                               {case "LP":
                                                  return A4($LinePlot.plotToForms,
                                                    {ctor: "_Tuple2"
                                                    ,_0: _v16._0
                                                    ,_1: _v16._1},
                                                    {ctor: "_Tuple2"
                                                    ,_0: _v17._0
                                                    ,_1: _v17._1},
                                                    {ctor: "_Tuple2"
                                                    ,_0: _v18._0
                                                    ,_1: _v18._1},
                                                    p._0);}
                                               _U.badCase($moduleName,
                                               "between lines 104 and 106");
                                            }();}
                                       _U.badCase($moduleName,
                                       "between lines 104 and 106");
                                    }();}
                               _U.badCase($moduleName,
                               "between lines 104 and 106");
                            }();}
                       _U.badCase($moduleName,
                       "between lines 104 and 106");
                    }();
                 });
                 var plotForms = $List.concat(A2($List.map,
                 A3(plot2Forms,
                 {ctor: "_Tuple2"
                 ,_0: xmin
                 ,_1: xmax},
                 {ctor: "_Tuple2"
                 ,_0: ymin
                 ,_1: ymax},
                 {ctor: "_Tuple2"
                 ,_0: _v4._0
                 ,_1: _v4._1}),
                 ax.plots));
                 var yExtent = ymax - ymin;
                 var xExtent = xmax - xmin;
                 var adjustY = function (y) {
                    return sy_ / (ymax - ymin) * (y - ymin) - sy_ / 2;
                 };
                 var xTickHeight = adjustY(yExtent) / 90;
                 var adjustX = function (x) {
                    return sx_ / (xmax - xmin) * (x - xmin) - sx_ / 2;
                 };
                 var yTickHeight = adjustX(xExtent) / 90;
                 var yTicksForm = $List.map(function (yTick) {
                    return $Graphics$Collage.traced($Graphics$Collage.defaultLine)(A2($Graphics$Collage.segment,
                    {ctor: "_Tuple2"
                    ,_0: (0 - sx_) / 2 - yTickHeight
                    ,_1: yTick},
                    {ctor: "_Tuple2"
                    ,_0: (0 - sx_) / 2 + yTickHeight
                    ,_1: yTick}));
                 })(A2($List.map,
                 adjustY,
                 ax.yTick));
                 var xTicksForm = $List.map(function (xTick) {
                    return $Graphics$Collage.traced($Graphics$Collage.defaultLine)(A2($Graphics$Collage.segment,
                    {ctor: "_Tuple2"
                    ,_0: xTick
                    ,_1: (0 - sy_) / 2 - xTickHeight},
                    {ctor: "_Tuple2"
                    ,_0: xTick
                    ,_1: (0 - sy_) / 2 + xTickHeight}));
                 })(A2($List.map,
                 adjustX,
                 ax.xTick));
                 var textForms = A2($List.map,
                 function (_v30) {
                    return function () {
                       switch (_v30.ctor)
                       {case "_Tuple3":
                          switch (_v30._0.ctor)
                            {case "_Tuple2":
                               return $Graphics$Collage.move({ctor: "_Tuple2"
                                                             ,_0: adjustX(_v30._0._0)
                                                             ,_1: adjustY(_v30._0._1)})($Graphics$Collage.toForm($Text.leftAligned($Text.style(_v30._2)($Text.fromString(_v30._1)))));}
                            break;}
                       _U.badCase($moduleName,
                       "between lines 128 and 129");
                    }();
                 },
                 ax.text);
                 var largestXTick = $List.isEmpty(ax.xTick) ? 0 : $List.maximum(A2($List.map,
                 $Basics.abs,
                 ax.xTick));
                 var $ = _U.cmp(largestXTick,
                 99) > 0 ? {ctor: "_Tuple2"
                           ,_0: $FormatNumber.exponential(1)
                           ,_1: xTickHeight * 3.0} : {ctor: "_Tuple2"
                                                     ,_0: $FormatNumber.fixed(1)
                                                     ,_1: xTickHeight * 3.0},
                 showXFloat = $._0,
                 offX = $._1;
                 var largestYTick = $List.isEmpty(ax.yTick) ? 0 : $List.maximum(A2($List.map,
                 $Basics.abs,
                 ax.yTick));
                 var $ = _U.cmp(largestYTick,
                 99) > 0 ? {ctor: "_Tuple2"
                           ,_0: $FormatNumber.exponential(1)
                           ,_1: yTickHeight * 5.5} : {ctor: "_Tuple2"
                                                     ,_0: $FormatNumber.fixed(1)
                                                     ,_1: yTickHeight * 4},
                 showYFloat = $._0,
                 offY = $._1;
                 var tStyle = function () {
                    var s = ax.textStyle;
                    return _U.replace([["height"
                                       ,$Maybe.Just(adjustY(yExtent) / 39)]],
                    s);
                 }();
                 var xTickLabels = A2($List.map,
                 function (xTick) {
                    return $Graphics$Collage.move({ctor: "_Tuple2"
                                                  ,_0: adjustX(xTick)
                                                  ,_1: (0 - sy_) / 2 - offX})($Graphics$Collage.toForm($Text.centered($Text.style(tStyle)($Text.fromString(showXFloat(xTick))))));
                 },
                 ax.xTick);
                 var yTickLabels = A2($List.map,
                 function (yTick) {
                    return $Graphics$Collage.move({ctor: "_Tuple2"
                                                  ,_0: (0 - sx_) / 2 - offY
                                                  ,_1: adjustY(yTick)})($Graphics$Collage.toForm($Text.centered($Text.style(tStyle)($Text.fromString(showYFloat(yTick))))));
                 },
                 ax.yTick);
                 var titleForm = $Graphics$Collage.move({ctor: "_Tuple2"
                                                        ,_0: 0
                                                        ,_1: sy_ / 2})($Graphics$Collage.toForm($Text.centered($Text.style(tStyle)($Text.fromString(ax.title)))));
                 return A2($Graphics$Collage.collage,
                 $Basics.round(_v4._0),
                 $Basics.round(_v4._1))(A2($List.append,
                 A2($List.append,
                 A2($List.append,
                 A2($List.append,
                 A2($List.append,
                 A2($List.append,
                 A2($List.append,
                 plotForms,
                 _L.fromArray([xaxis,yaxis])),
                 xTicksForm),
                 yTicksForm),
                 xTickLabels),
                 yTickLabels),
                 textForms),
                 _L.fromArray([titleForm])));
              }();}
         _U.badCase($moduleName,
         "between lines 94 and 144");
      }();
   });
   var addTextWithStyle = F2(function (l,
   ax) {
      return function () {
         var prev = ax.text;
         return _U.replace([["text"
                            ,A2($List.append,prev,l)]],
         ax);
      }();
   });
   var addText = F2(function (l,
   ax) {
      return function () {
         var prev = ax.text;
         var $new = A2($List.map,
         function (_v37) {
            return function () {
               switch (_v37.ctor)
               {case "_Tuple2":
                  return {ctor: "_Tuple3"
                         ,_0: _v37._0
                         ,_1: _v37._1
                         ,_2: ax.textStyle};}
               _U.badCase($moduleName,
               "on line 68, column 34 to 52");
            }();
         },
         l);
         return _U.replace([["text"
                            ,A2($List.append,prev,$new)]],
         ax);
      }();
   });
   var yLabel = F2(function (l,
   ax) {
      return _U.replace([["yLabel"
                         ,l]],
      ax);
   });
   var xLabel = F2(function (l,
   ax) {
      return _U.replace([["xLabel"
                         ,l]],
      ax);
   });
   var title = F2(function (t,ax) {
      return _U.replace([["title"
                         ,t]],
      ax);
   });
   var yTick = F2(function (yTicks,
   ax) {
      return _U.replace([["yTick"
                         ,yTicks]],
      ax);
   });
   var xTick = F2(function (xTicks,
   ax) {
      return _U.replace([["xTick"
                         ,xTicks]],
      ax);
   });
   var yLimits = F2(function (lim,
   ax) {
      return _U.replace([["yLimits"
                         ,$Types.Explicit(lim)]],
      ax);
   });
   var xLimits = F2(function (lim,
   ax) {
      return _U.replace([["xLimits"
                         ,$Types.Explicit(lim)]],
      ax);
   });
   var prettyPrint = function (f) {
      return _U.cmp($Basics.abs(f),
      99) < 0 ? A2($FormatNumber.fixed,
      1,
      f) : A2($FormatNumber.exponential,
      1,
      f);
   };
   var textStyle = {_: {}
                   ,bold: false
                   ,color: $Color.black
                   ,height: $Maybe.Nothing
                   ,italic: false
                   ,line: $Maybe.Nothing
                   ,typeface: _L.fromArray(["Helvetica"
                                           ,"Times New Roman"])};
   var axes = {_: {}
              ,plots: _L.fromArray([])
              ,text: _L.fromArray([])
              ,textStyle: textStyle
              ,title: ""
              ,xLabel: ""
              ,xLimits: $Types.Auto
              ,xTick: _L.fromArray([])
              ,yLabel: ""
              ,yLimits: $Types.Auto
              ,yTick: _L.fromArray([])};
   var linspace = F3(function (a,
   b,
   n) {
      return A2($List.map,
      function (x) {
         return (b - a) / $Basics.toFloat(n - 1) * x + a;
      },
      _L.range(0.0,
      $Basics.toFloat(n) - 1));
   });
   _elm.Plot.values = {_op: _op
                      ,linspace: linspace
                      ,textStyle: textStyle
                      ,axes: axes
                      ,prettyPrint: prettyPrint
                      ,xLimits: xLimits
                      ,yLimits: yLimits
                      ,xTick: xTick
                      ,yTick: yTick
                      ,title: title
                      ,xLabel: xLabel
                      ,yLabel: yLabel
                      ,addText: addText
                      ,addTextWithStyle: addTextWithStyle
                      ,autoXLims: autoXLims
                      ,autoYLims: autoYLims
                      ,plots: plots
                      ,showA: showA};
   return _elm.Plot.values;
};